---

- name: Register vars kubernetes_svc_vip
  shell: |
    echo {{ service_cidr }} | cut -d/ -f1|awk -F. '{print $1"."$2"."$3"."$4+1}'
  register: kubernetes_svc_vip

- name: cluster kubernetes svc vip
  debug:
    msg: "{{ kubernetes_svc_vip.stdout }}"

- name: Register vars cluster_kubernetes_svc_vip
  set_fact: cluster_kubernetes_svc_vip={{ kubernetes_svc_vip.stdout }}

- name: Create token str
  shell : |
    echo $(head -c 16 /dev/urandom | od -An -t x | tr -d ' ')
  register: token

- name: debug token
  debug:
    msg: "{{ token.stdout }}"

- name: Register vars token_str
  set_fact: token_str={{ token.stdout }}

- name: Create {{ cfssl_dir }}/token.csv
  lineinfile:
    path: "{{ cfssl_dir }}/token.csv"
    line: "{{ token_str }},kubelet-bootstrap,10001,\"system:kubelet-bootstrap\""
    create: yes


- name: Create etcd csr file {{ cfssl_dir }} <etcd-csr.json>
  template:
    src: etcd-csr.json.j2
    dest: "{{ cfssl_dir }}/etcd-csr.json"

- name: Create kube-apiserver csr file {{ cfssl_dir }} <kube-apiserver-csr.json>
  template:
    src: kube-apiserver-csr.json.j2
    dest: "{{ cfssl_dir }}/kube-apiserver-csr.json"

- name: Create kube-scheduler csr file {{ cfssl_dir }} <kube-scheduler-csr.json>
  template:
    src: kube-scheduler-csr.json.j2
    dest: "{{ cfssl_dir }}/kube-scheduler-csr.json"

- name: Create kube-proxy  csr file {{ cfssl_dir }} <kube-proxy-csr.json>
  template:
    src: kube-proxy-csr.json
    dest: "{{ cfssl_dir }}/kube-proxy-csr.json"

- name: Create kube-controller-manager-csr.json csr file {{ cfssl_dir }} <kube-controller-manager-csr.json>
  template:
    src: kube-controller-manager-csr.json.j2
    dest: "{{ cfssl_dir }}/kube-controller-manager-csr.json"

- name: Create admin csr file {{ cfssl_dir }} <admin.json>
  template:
    src: admin-csr.json
    dest: "{{ cfssl_dir }}/admin-csr.json"

- name: Create etcd ca {{ cfssl_dir }} <etcd-key.pem  etcd.pem>
  shell: |
    cd {{ cfssl_dir }} && \
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
           -profile=kubernetes etcd-csr.json | cfssljson  -bare etcd

- name: Create  kube-apiserver ca  {{ cfssl_dir }} <kube-apiserver-key.pem kube-apiserver.pem>
  shell: |
    cd {{ cfssl_dir }} && \
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
    -profile=kubernetes kube-apiserver-csr.json | cfssljson -bare kube-apiserver

- name: Create kube-scheduler ca {{ cfssl_dir }} <kube-scheduler-key.pem kube-scheduler.pem>
  shell: |
    cd {{ cfssl_dir }} && \
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
    -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler 

- name: Create kube-controller-manager ca {{ cfssl_dir }} <kube-controller-manager-key.pem kube-controller-manager.pem>
  shell: |
    cd {{ cfssl_dir }} && \
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
    -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager

- name: Create kube-proxy ca {{ cfssl_dir }} <kube-proxy-key.pem kube-proxy.pem>
  shell: |
    cd {{ cfssl_dir }} && \
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
    -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy

- name: Create admin ca {{ cfssl_dir }} <admin-key.pem admin.pem>
  shell: |
    cd {{ cfssl_dir }} && \
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
    -profile=kubernetes admin-csr.json | cfssljson -bare admin
